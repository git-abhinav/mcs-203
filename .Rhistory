1592,
2571,
3631,
4774,
5836,
7172,
8361,
9774,
10820)
lines(l, m2)
lines(l, m3)
plot(l, m2)
plot(l, m2,type="l")
plot(l, m3,type="l")
plot(l, m2,type="l")
lines(l, m3, type= "l")
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
data_insert
data_quick
merge_y
x
merge_y
insert_y
insert_y
merge_y
quick_y
trendline
library(basicTrendline)
trendline()
trendline
?trendline
trendline(x, insert_y, model = "line3P")
trendline(x, insert_y, model = "line2P")
trendline(x, insert_y, model = "line3P")
trendline(x, insert_y, model = "log2P")
trendline(x, insert_y, model = "exp2P")
trendline(x, insert_y, model = "power2P")
trendline(x, insert_y, model = "power3P")
trendline(x, insert_y, model = "power2P")
trendline(x, insert_y, model = "line2P")
trendline(x, insert_y, model = "line3P")
trendline(x, insert_y, model = "power2P")
trendline(x, insert_y, model = "power2P", summary = TRUE)
fitting <- data.frame(insert, quick, merge)
fitting[3] = trendline(x, insert_y, model="power2P")
trendline(x, insert_y, model="power2P")
trendline(x, quick_y, model="log2P")
trendline(x, quick_y, model="line2P")
trendline(x, quick_y, model="line3P")
trendline(x, quick_y, model="line3P", type = "")
trendline(x, quick_y, model="line3P", type = "l")
?trendline_summary
trendline_summary(x, quick_y)
trendline_summary(x, quick_y)
trendline(x, quick_y, model="line2P")
trendline(x, quick_y, model="line2P",type="l")
trendline(x, quick_y, model="line3P",type="l")
trendline(x, quick_y, model="log2P",type="l")
trendline(x, quick_y,type="l", model="log2P")
trendline(x, quick_y,type="l", model=", model="log2P"")
trendline(x, quick_y,type="l", model=", model="log2P"")
trendline(x, quick_y,type="l", model="exp2P")
trendline(x, quick_y,type="l", model="exp3P")
trendline(x, quick_y,type="l", model="power2P")
trendline(x, quick_y,type="l", model="power3P")
trendline(x, quick_y,type="l", model="power2P")
trendline(x, quick_y,type="l", model="power3P")
trendline(x, quick_y,type="l", model="power2P")
trendline(x, quick_y,type="l", model="power3P")
trendline(x, quick_y,type="l", model="power2P")
trendline(x, quick_y,type="l", model="power3P")
lines(x, x*log2(x))
trendline(x, insert_y, type="l", model="line3P")
trendline(x, insert_y, type="l", model="line3P")
trendline(x, quick_y, type="l", model="line3P")
trendline(x, quick_y, type="l", model="line2P")
trendline(x, quick_y, type="l", model="line3P")
trendline(x, quick_y, type="l", model="log2P")
trendline(x, quick_y, type="l", model="exp2P")
trendline(x, quick_y, type="l", model="exp3P")
trendline(x, quick_y, type="l", model="power2P")
trendline(x, quick_y, type="l", model="power3P")
trendline(x, quick_y, type="l", model="power3P")
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
plot(x, quick_y)
plot(x, quick_y,type="l")
plot(x, quick_y,type="l")
lines(x, merge_y, type="l")
lines(x, merge_y, type="l",col ="red")
lines(x, n*log(n), type="l",col ="green")
lines(x, n*log2(n), type="l",col ="green")
lines(x, x*log2(x), type="l",col ="green")
Rcpp::sourceCpp('Desktop/u.cpp')
?line
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
Rcpp::sourceCpp('Desktop/u.cpp')
x<-1:100
y1<-x*x*x+20*x+1
y1
plot(x, y1, type ="l")
line(x, x*x*x)
lines(x, x*x*x)
lines(x, x*x*x, col = "red")
lines(x, 3*x*x*x, col = "red")
y = x*x-100*x-200
y
plot(x, y)
lines(x, 3*x*x*x, col = "red")
lines(x, 3*x*x*x, col = "red", type="l")
plot(x, y,type="")
plot(x, y,type="l")
y = x*x - 100*x - 200
y
plot(x, y,type="l")
lines(x, x*x)
lines(x, x*x, type="l")
lines(x, x*x/3, type="l")
seq(100, 600, 10)
x<- seq(100, 600, 10)
x
plot(x, x*x-100x-200, type="l")
plot(x, x*x-100*x-200, type="l")
lines(x, x*x, col = "red")
lines(x, (x*x)/3, col = "red")
lines(x, (x*x)/3, col = "green")
x<-seq
x<-seq(1, 100, 2)
x
plot(x, x*x-10)
plot(x, x*x-10, type="l")
x<-seq(1, 50, 2)
plot(x, x*x-10, type="l")
lines(x, x*x/2, col = "red")
x<-seq(1, 20, 2)
plot(x, x*x-10, type="l")
lines(x, x*x/2, col = "red")
plot(sample(10), sample(10), col="red")
par(new=TRUE)
plot(sample(5), sample(5), col="green")
plot(sample(510), sample(10), col="green")
plot(sample(10), sample(10), col="green")
par(new=TRUE)
plot(sample(10), sample(10), col="red")
lines(sample(10), sample(10))
iris
iris[,4]
iris[,5]
unique(iris[,5])
k = 3
train = iris[1:100,]
train
iris
k = 3
train = iris[1:100,]
plot(iris[,1])
plot(iris[,2])
plot(iris[,3])
plot(iris[,4])
plot(iris[,5])
plot(iris[,4])
iris[,4]
plot(iris[,3])
i = iris[,3]
k1 = c()
k2 = c()
k3 = c()
a =  c()
a =  c(a, "a")
a
a =  c(a, "b")
a
range(1,10)
for i in 1:10:
for i in 1:10
for (i in 1:10)
print i
for ( i in 1:10){}
for ( i in 1:10){
print(i)}
row(iris)
col(iris)
len(iris)
dim(iris)
a= dim(iris)
a
a[1]
k1 = c()
k1 = c()
k2 = c()
k3 = c()
attribute_no = 3
k1 = c(k1, iris[1, attribute_no])  #   arbitrary
k2 = c(k2, iris[2, attribute_no])  #   arbitrary
k3 = c(k3, iris[3, attribute_no])  #
prev_mean1 = mean(k1)
prev_mean2 = mean(k2)
prev_mean3 = mean(k3)
prev_mean1
k1
k1[1]
k1[2]
k1[3]
k1
k1 = iris[, attribute_no]
View(iris)
data = iris[, attribute_no]
data
plot(iris[,5])
plot(iris[,])
plot(iris[1,])
plot(iris[1,5])
plot(iris[2,5])
plot(iris[3,5])
plot(iris[4,5])
c1 = iris[1,]
c1
c2 = iris[2,]
c3 = iris[3,]
c2
c3
source('~/Desktop/College/Under Graduation/6th Semester/Data Mining/Clustering/kmeans.r')
setwd("~/Desktop/College/Programs/mcs-203")
dir
data = read.csv("pollution.csv")
subset(data)
head(data)
a = c("SO2", "NO2", "RSPM.PM10", "PM.2.5")
a
data[a]
d = data[a]
d
d$PM.2.5
which(d$PM.2.5==NA)
which(d$PM.2.5=="NA")
d$PM.2.5 = c(d$PM.2.5)
which(d$PM.2.5==NA)
which(d$PM.2.5=="NA")
which(is.na(d$PM.2.5))
a
dim(a)
a
count(a)
a.count()
len(a)
length(a)
a[0]
a[1]
for(i in range(1,length(a))){print(i)}
for(i in range(1:length(a))){print(i)}
for(i in seq(1:length(a))){print(i)}
which(is.na(d$SO2))
which(is.na(d$NO2))
which(is.na(d$RSPM.PM10))
which(is.na(d$PM.2.5))
d[NO2]
d[1]
d[2]
d[4]
tial(d[4])
tial(d[,4])
tial(d[3])
tail(d[3])
tail(d[4])
tail(d[5])
tail(d[1])
which(is.na(d[4]))
# TO REMOVE MISSING VALUES FROM THE DATASET
data = read.csv("pollution.csv")
a = c("SO2", "NO2", "RSPM.PM10", "PM.2.5")
d = data[a]
tobedeletdrows = c()
for(i in seq(1:length(a)))
{
tobedeletdrows = c(tobedeletdrows, which(is.na(d[i])))
}
tobedeletdrows
data[,-tobedeletdrows]
dim(data[,-tobedeletdrows])
dim(data[])
dim(data)
dim(data[-tobedeletdrows,])
length(tobedeletdrows)
data = data[-tobedeletdrows,]
write.csv(data, "pollution_with_no_na.csv")
seq.dates("01/01/92", "12/31/92", by = "months")
install.packages("dates.seq")
install.packages("seq.dates")
sample(seq(as.Date('1999/01/01'), as.Date('2000/01/01'), by="day"), 12)
sample(seq(as.Date('1999/01/01'), as.Date('2000/01/01'), by="day"), 365)
seq(as.Date('2015/01/01'), as.Date('2016/01/01'), by="day")
seq(as.Date('2015/01/01'), as.Date('2016/12/31'), by="day")
seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day")
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
dates
dates[1]
dates[0]
dates[2]
sample(c(1,5))
sample(c(1,5), 4)
sample(1,5,)
sample(c(1,5),)
sample(c(1,5))
sample(c(1,5))
sample(c(6))
sample(6)
sample(1)
sample(1, c(4,8))
sample(c(0,1), 100, replace = TRUE)
sample(c(10,100), 5)
sample(c(10,100), 5, replace = TRUE)
sample(seq(10,100), 5, replace = TRUE)
sample(seq(10,100), 5)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
sample(seq(1,100), 3)
length(dates)
df = data.frame()
df[1,1]
df[1,1] = 5
df
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia")
df[1,1:length(cases)] = 5
df[1,1:length(cases)]
df[,1:length(cases)] = 5
df
df = data.frame(names=cases)
df
df = data.frame(names=cases, by = "row")
df
df = data.frame(names=cases, by = "column")
df
df = data.frame(names=cases)
df
df = data.frame()
names(df)=cases
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia")
df = data.frame()
for(i in seq(1, length(dates)))
{
df[i] = sample(seq(0,15), length(cases))
}
sample(seq(0,15), length(cases))
sample(seq(0,15), length(cases))
df = data.frame()
for(i in seq(1, length(dates)))
{
df[i,] = sample(seq(0,15), length(cases))
}
df
df
df = data.frame()
for(i in seq(1, length(dates)))
{
df[i,] = sample(seq(0,15), length(cases))
}
f
fd
df
view(df)
View(df)
df[1,] = sample(seq(0,15), length(cases))
df[,1] = sample(seq(0,15), length(cases))
df
df
df = as.matrix()
for(i in seq(1, length(dates)))
{
df[i,] = sample(seq(0,15), length(cases))
}
df = data.frame(
"dates"=dates,
"Nephrology"=sample(c(0,15), 365)
)
df = data.frame(
"dates"=dates,
"Nephrology"=sample(c(0,15), 365, replace = TRUE)
)
df
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE)
)
df
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia")
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE),
"G.I. Surgery"==sample(seq(0,15), 365, replace = TRUE),
'Orthopaedic'=sample(seq(0,15), 365, replace = TRUE),
"Cardiology"=sample(seq(0,15), 365, replace = TRUE),
"Psychiatry"=sample(seq(0,15), 365, replace = TRUE),
"Paediatric"=sample(seq(0,15), 365, replace = TRUE),
"Chronic Obstructive Pulmonary Disease"=sample(seq(0,15), 365, replace = TRUE),
"Pneumonia"=sample(seq(0,15), 365, replace = TRUE),
)
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia")
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE),
"G.I. Surgery"==sample(seq(0,15), 365, replace = TRUE),
'Orthopaedic'=sample(seq(0,15), 365, replace = TRUE),
"Cardiology"=sample(seq(0,15), 365, replace = TRUE),
"Psychiatry"=sample(seq(0,15), 365, replace = TRUE),
"Paediatric"=sample(seq(0,15), 365, replace = TRUE),
"Chronic Obstructive Pulmonary Disease"=sample(seq(0,15), 365, replace = TRUE),
"Pneumonia"=sample(seq(0,15), 365, replace = TRUE)
)
df
View(df)
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE),
"G.I. Surgery"=sample(seq(0,15), 365, replace = TRUE),
'Orthopaedic'=sample(seq(0,15), 365, replace = TRUE),
"Cardiology"=sample(seq(0,15), 365, replace = TRUE),
"Psychiatry"=sample(seq(0,15), 365, replace = TRUE),
"Paediatric"=sample(seq(0,15), 365, replace = TRUE),
"Chronic Obstructive Pulmonary Disease"=sample(seq(0,15), 365, replace = TRUE),
"Pneumonia"=sample(seq(0,15), 365, replace = TRUE)
)
df
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia", "emphysema")
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE),
"G.I. Surgery"=sample(seq(0,15), 365, replace = TRUE),
'Orthopaedic'=sample(seq(0,15), 365, replace = TRUE),
"Cardiology"=sample(seq(0,15), 365, replace = TRUE),
"Psychiatry"=sample(seq(0,15), 365, replace = TRUE),
"Paediatric"=sample(seq(0,15), 365, replace = TRUE),
"Chronic Obstructive Pulmonary Disease"=sample(seq(0,15), 365, replace = TRUE),
"Pneumonia"=sample(seq(0,15), 365, replace = TRUE),
"emphysema"=sample(seq(0,15), 365, replace = TRUE)
)
df
# data generator
dates = seq(as.Date('2015/01/01'), as.Date('2015/12/31'), by="day") #whole year data
cases = c("Nephrology", "G.I. Surgery",
'Orthopaedic', "Cardiology", "Psychiatry",
"Paediatric", "Chronic Obstructive Pulmonary Disease",
"Pneumonia", "emphysema")
df = data.frame(
"dates"=dates,
"Nephrology"=sample(seq(0,15), 365, replace = TRUE),
"G.I. Surgery"=sample(seq(0,15), 365, replace = TRUE),
'Orthopaedic'=sample(seq(0,15), 365, replace = TRUE),
"Cardiology"=sample(seq(0,15), 365, replace = TRUE),
"Psychiatry"=sample(seq(0,15), 365, replace = TRUE),
"Paediatric"=sample(seq(0,15), 365, replace = TRUE),
"Chronic Obstructive Pulmonary Disease"=sample(seq(0,15), 365, replace = TRUE),
"Pneumonia"=sample(seq(0,15), 365, replace = TRUE),
"emphysema"=sample(seq(0,15), 365, replace = TRUE)
)
write.csv("health_data.csv", df)
write.csv(df, "health_data.csv")
df[,1]
dim(df[-rr, -rc])
rr = sample(seq(1,365), 5)
rc = sample(seq(1,length(cases)), 3)
dim(df[-rr, -rc])
dim(df[,])
df[rr, rc]
df[rr, rc] = NA
df
write.csv(df, "health_data.csv")
