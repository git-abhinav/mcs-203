install.packages("corplot")
install.packages(corplot)
install.packages("corplot")
setwd("~/Desktop/College/Programs/mcs-203")
d = read.csv(file.choose()) # select pollution_with_no_na_and_date_fine from dialog box
x = d[c(7,11,12,13,14,16)]
head(x)
d1 = x[which(x$quarter==1),]
d2 = x[which(x$quarter==2),]
d3 = x[which(x$quarter==3),]
d4 = x[which(x$quarter==4),]
head(d1)
head(d2)
head(d3)
head(d4)
aggregate(d1[, c(2,3,4,5)], list(d1$City.Town.Village.Area), mean)
aggregate(d2[, c(2,3,4,5)], list(d2$City.Town.Village.Area), mean)
aggregate(d3[, c(2,3,4,5)], list(d3$City.Town.Village.Area), mean)
aggregate(d4[, c(2,3,4,5)], list(d4$City.Town.Village.Area), mean)
# Pick 3rd quarter. Woh jyada acha hai.
data = aggregate(d3[, c(2,3,4,5)], list(d3$City.Town.Village.Area), mean)
library(cluster)
# ELBOW METHOD
wss <- sapply(1:12, function(k) {kmeans(data[,2], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,2],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,2],col=results$cluster)
d <- read.csv("pollution_with_no_nav.csv")
cities <- c(as.character(unique(d$City.Town.Village.Area)))
citywisemean = c()
no2 = c()
so2 = c()
pm10 = c()
pm2.5 = c()
for(i in seq(1,length(cities)))
{
indexes = which(d$City.Town.Village.Area == cities[i])
no2[i] = mean(d$NO2[indexes])
so2[i] = mean(d$SO2[indexes])
pm10[i] = mean(d$RSPM.PM10[indexes])
pm2.5[i] = mean(d$PM.2.5[indexes])
}
df <- data.frame(cities, no2, so2, pm10, pm2.5)
lbls <- c("no2", "so2", "pm10", "pm2.5")
i = 1
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
d_for_part <- data.frame(d$City.Town.Village.Area, d$NO2, d$SO2, d$RSPM.PM10, d$PM.2.5)
d_for_part
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(train$d.City.Town.Village.Area~., train, method = "class")
rpart.plot(result)
p<-predict(d_for_part, test, type  = "class")
###
trainPercentage = 75
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
library(rpart)
library(rpart.plot)
###
trainPercentage = 75
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
x = d[c(7,11,12,13,14,16)]
head(x)
d1 = x[which(x$quarter==1),]
d2 = x[which(x$quarter==2),]
d3 = x[which(x$quarter==3),]
d4 = x[which(x$quarter==4),]
head(d1)
head(d2)
head(d3)
head(d4)
aggregate(d1[, c(2,3,4,5)], list(d1$City.Town.Village.Area), mean)
aggregate(d2[, c(2,3,4,5)], list(d2$City.Town.Village.Area), mean)
aggregate(d3[, c(2,3,4,5)], list(d3$City.Town.Village.Area), mean)
aggregate(d4[, c(2,3,4,5)], list(d4$City.Town.Village.Area), mean)
# Pick 3rd quarter. Woh jyada acha hai.
data = aggregate(d3[, c(2,3,4,5)], list(d3$City.Town.Village.Area), mean)
library(cluster)
# ELBOW METHOD
wss <- sapply(1:12, function(k) {kmeans(data[,2], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,2],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,2],col=results$cluster)
result
head(result)
data[,2]
names(data[,2])
names(data)
plot(data[,2],col=results$cluster, main = "Clusters", xlab=)
plot(data[,2],col=results$cluster, main = "Clusters", ylab = "SO2 level")
data
wss <- sapply(1:12, function(k) {kmeans(data[,3], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,3],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
# KMEANS
results <- kmeans(data[,3],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,3],col=results$cluster, main = "Clusters", ylab = "NO2 level")
data
wss <- sapply(1:12, function(k) {kmeans(data[,4], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,4],4)  # By elbow method we see k=4 is good to take as value
# KMEANS
results <- kmeans(data[,4],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,3],col=results$cluster, main = "Clusters", ylab = "NO2 level")
wss <- sapply(1:12, function(k) {kmeans(data[,4], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,4],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,4],col=results$cluster, main = "Clusters", ylab = "RSPM.PM10  level")
data
wss <- sapply(1:12, function(k) {kmeans(data[,5], k, nstart=50, iter.max = 15)$tot.withinss})
wss
plot(1:12, wss, type="b", pch=19, frame = FALSE, xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMEANS
results <- kmeans(data[,5],4)  # By elbow method we see k=4 is good to take as value
# as after that their is negligible change
results
table(data[,1],results$cluster)
plot(data[,5],col=results$cluster, main = "Clusters", ylab = "PM2.5  level")
