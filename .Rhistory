install.packages("corplot")
install.packages(corplot)
install.packages("corplot")
setwd("~/Desktop/College/Programs/mcs-203")
ls
ls
ls()
d <- read.csv("pollution_with_no_nav.csv")
getwd()
d<-read.csv("pollution_with_no_na.csv")
d
factor(d$State)
factor(d$City.Town.Village.Area)
unique(d$City.Town.Village.Area)
unique(d$City.Town.Village.Area)[1]
as.character(unique(d$City.Town.Village.Area))
cities <- c(as.character(unique(d$City.Town.Village.Area)))
cities
names(d)
no2 = c()
so2 = c()
pm10 = c()
pm2.5 = c()
cities <- c(as.character(unique(d$City.Town.Village.Area)))
for(i in seq(1,length(cities)))
{
indexes = which(d$City.Town.Village.Area == cities[i])
no2[i] = mean(d$NO2[indexes])
so2[i] = mean(d$SO2[indexes])
pm10[i] = mean(d$RSPM.PM10[indexes])
pm2.5[i] = mean(d$PM.2.5[indexes])
}
df <- data.frame(cities, no2, so2, pm10, pm2.5)
df
plot(df$cities, df$no2)
plot.default(df$cities, df$no2)
plot.default(df$cities, df$no2, type = "l")
plot.default(df$cities, df$no2, col = "red")
plot.default(df$cities, df$no2, col = "red", xlab = df$cities)
?plot.default
plot(df$cities, df$no2, col = "red")
hist(data.frame(c(1:5), c(1:.5)))
plot.default(df$cities, df$no2, col = "red", xlim = df$cities)
plot(df$no2, df$cities)
library(plotrix)
install.packages("plotrix")
library(plotrix)
slices <- c(no2[1], so2[1], pm10[1], pm2.5[1])
names(df)
lbls <- c(names(df))
pie3D(slices,labels=lbls,explode=0.1,
main="pie chart")
pie3D(slices,labels=lbls,explode=0.1,
main=names(df)[1])
pie3D(slices,labels=lbls,explode=0.1,
main=df$cities[1])
pie3D(slices,labels=lbls,explode=0.1,
main=cat(df$cities[1]+" Pollutants"))
pie3D(slices,labels=lbls,explode=0.1,
main=cat(df$cities[1]," Pollutants"))
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[1]+" Pollutants"))
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[1]," Pollutants"))
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[1]+" Pollutants"))
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[1]," Pollutants"))
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
i = 1
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
lbls <- c(cities)
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
lbls
lbls <- c(names(df)[2:])
lbls <- c("no2", "so2", "pm10", "pm2.5")
i = 1
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
fit <- kmeans(df[,2:5], 5)
fit
table(fit$centers)
table(fit$cluster)
names(d)
for(i in seq(1:length(cities)))
{
slices <- c(no2[i], so2[i], pm10[i], pm2.5[i])
pie3D(slices,labels=lbls,explode=0.1,
main=paste(df$cities[i]," Pollutants"))
cat ("Press [enter] to continue")
line <- readline()
}
d
names(d)
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
dim(d)
dim(d)[1]
s <- sample(dim(d)[1], 0.9*dim(d)[1])
s
train <- d_for_part[s,]
test <- d_for_part[-s,]
names(d_for_part)
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart(X.City.Town.Village.Area.~., train, method = "class")
library(rpart)
result <-rpart(X.City.Town.Village.Area.~., train, method = "class")
plot(result)
rpart.plot(result)
rpart::rpart.plot(result)
rpart.plot(result)
plot.rpart(result)
rpart::plot.rpart(result)
plot.rpart(result)
library(plot.rpart)
library(rpart.plot)
rpart.plot(result)
rpart::rpart.plot(result)
library(rpart)
rpart::rpart.plot(result)
rpart.plot::rpart.plot(result)
result <-rpart::rpart(X.City.Town.Village.Area.~., train, method = "class")
plot(result)
rpart.plot::rpart.plot(result)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot::rpart.plot(result)
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(X.City.Town.Village.Area.~., train, method = "class")
rpart.plot::rpart.plot(result)
rpart.plot(result)
plot.rpart(result)
rpart.plot(result)
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(X.City.Town.Village.Area.~., train[2:5], method = "class")
test <- d_for_part[-s,]
result <-rpart::rpart(X.City.Town.Village.Area.~., train, method = "class")
rpart.plot(result)
result
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(X.City.Town.Village.Area.~, train, method = "class")
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(X.City.Town.Village.Area.~., train, method = "class")
result
d_for_part <- data.frame("City.Town.Village.Area", "NO2", "SO2", "RSPM.PM10", "PM.2.5")
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(train$X.City.Town.Village.Area.~., train, method = "class")
rpart.plot(result)
result
d_for_part
d_for_part <- data.frame(d$City.Town.Village.Area, d$NO2, d$SO2, d$RSPM.PM10, d$PM.2.5)
d_for_part
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(train$X.City.Town.Village.Area.~., train, method = "class")
names(d_for_part)
result <-rpart::rpart(train$d.City.Town.Village.Area~., train, method = "class")
rpart.plot(result)
p<-predict(d_for_part, test, type  = "class")
library(predict)
p<-predict(d_for_part, test, type  = "class")
library(caret)
install.packages("caret")
library(caret)
p<-predict(d_for_part, test, type  = "class")
rpart.plot(result)
p<-predict(d_for_part, test, type  = "class")
d_for_part
p<-predict(d_for_part, test, type  = "class")
p<-caret::predict(d_for_part, test, type  = "class")
p<-predict(d_for_part, test, type  = "class")
test
libray(stats)
install.packages("stats")
install.packages("stats")
p<-predict(d_for_part, test, type  = "class")
p<-train.predict(d_for_part, test, type  = "class")
predict()
?predict
result
p<-predict(d_for_part, test, type  = "class")
class(test)
p<-predict(d_for_part, test, type  = "class")
x<-read.csv("pollution_with_no_na_and_date_fine.csv")
boxplot(x$PM.2.5)
boxplot(x$RSPM.PM10)
d_for_part <- data.frame(d$City.Town.Village.Area, d$NO2, d$SO2, d$RSPM.PM10, d$PM.2.5)
s <- sample(dim(d)[1], 0.9*dim(d)[1])
train <- d_for_part[s,]
test <- d_for_part[-s,]
result <-rpart::rpart(train$d.City.Town.Village.Area~., train, method = "class")
rpart.plot(result)
p<-predict(d_for_part, test, type  = "class")
d_for_part
###
trainPercentage = 75
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
s
train <- d_for_part[s,]
test <- d_for_part[-s,]
names(train)
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
###
trainPercentage = 80
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
###
trainPercentage = 90
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
###
trainPercentage = 99
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
###
trainPercentage = 75
s<-sample(nrow(d_for_part), (trainPercentage/100)*nrow(d_for_part))
train <- d_for_part[s,]
test <- d_for_part[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
boxplot(d_for_part$d.NO2, d_for_part$d.SO2)
boxplot(d_for_part[,2:])
boxplot(d_for_part[,-1])
boxplot(d_for_part[,-1], main =" fasdf")
boxplot(d_for_part[,-1], main ="Box plot")
x=d_for_part
boxplot(x$d.NO2)
x[-(which(x$d.NO2>40)),]
boxplot(x$d.NO2)
y<-x[-(which(x$d.NO2>40)),]
boxplot(y$d.NO2)
x<-x[-(which(x$d.NO2>40)),]
boxplot(y$d.SO2)
x<-x[-(which(x$d.NO2>17)),]
boxplot(y$d.SO2)
boxplot(x$d.SO2)
boxplot(x$d.NO2)
boxplot(x$d.SO2)
x<-x[-(which(x$d.SO2>12)),]
boxplot(x$d.SO2)
x<-x[-(which(x$d.SO2>10)),]
boxplot(x$d.SO2)
x<-x[-(which(x$d.SO2>9)),]
boxplot(x$d.SO2)
x<-x[-(which(x$d.SO2>5)),]
boxplot(x$d.SO2)
x
# outlier removal
x <- d_for_part
boxplt
boxplot(x$d.NO2)
# befoe
boxplot(x$d.NO2, main = "NO2 before")
x[-(which(x$d.NO2>40))]
x<-x[-(which(x$d.NO2>40))]
# befoe
boxplot(x$d.NO2, main = "NO2 before")
# befoe
boxplot(x$d.NO2, main = "NO2 before")
# befoe
boxplot(x$d.NO2, main = "NO2 before")
x<-x[-(which(x$d.NO2>40)),]
# befoe
boxplot(x$d.NO2, main = "NO2 before")
# outlier removal
x <- d_for_part
# befoe
boxplot(x$d.NO2, main = "NO2 before")
x<-x[-(which(x$d.NO2>40)),]
# befoe
boxplot(x$d.NO2, main = "NO2 before")
# outlier removal
x <- d_for_part
boxplot(x$d.NO2, main = "NO2 before")
x<-x[-(which(x$d.NO2>40)),]
boxplot(x$d.NO2, main = "NO2 After")
boxplot(x$d.SO2, main = "SO2 before")
x<-x[-(which(x$d.SO2>16)),]
boxplot(x$d.NO2, main = "NO2 After")
boxplot(x$d.NO2, main = "SO2 After")
boxplot(x$d.RSPM.PM10, main = "RSPM.PM10 before")
x<-x[-(which(x$d.RSPM.PM10>160)),]
boxplot(x$d.NO2, main = "SO2 After")
boxplot(x$d.RSPM.PM10, main = "RSPM.PM10 After")
boxplot(x$d.PM.2.5, main = "PM.2.5 before")
x<-x[-(which(x$d.PM.2.5,>80)),]
boxplot(x$d.PM.2.5,, main = "d.PM.2.5, After")
boxplot(x$d.PM.2.5, main = "d.PM.2.5, After")
boxplot(x$d.PM.2.5, main = "PM.2.5 before")
x<-x[-(which(x$d.PM.2.5>80)),]
boxplot(x$d.PM.2.5, main = "PM.2.5, After")
trainPercentage = 75
trainPercentage = 75
s<-sample(nrow(x), (trainPercentage/100)*nrow(x))
train <- x[s,]
test <- x[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
trainPercentage = 80
s<-sample(nrow(x), (trainPercentage/100)*nrow(x))
train <- x[s,]
test <- x[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
trainPercentage = 80
s<-sample(nrow(x), (trainPercentage/100)*nrow(x))
train <- x[s,]
test <- x[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
trainPercentage = 80
s<-sample(nrow(x), (trainPercentage/100)*nrow(x))
train <- x[s,]
test <- x[-s,] # d.City.Town.Village.Area
r<-rpart(d.City.Town.Village.Area~.,train, method = "class")
rpart.plot(r)
p<-predict(r, test, type = "class")
table(test$d.City.Town.Village.Area,p)
mean(p==test$d.City.Town.Village.Area)
write.csv(x, "boxploted")
write.csv(x, "boxploted.csv")
